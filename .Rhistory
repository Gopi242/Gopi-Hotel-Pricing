state77 <- as.data.frame(state.x77)
names(state77)[4] <- "Life.Exp"
model<- lm(Life.Exp ~ ., data = state77)
summary(model)
data.df <-read.csv(paste("E:\Studies\Edx Intro to Data Analysis\Udemy\Data sets\SixAirlines.csv", sep=""))#Loading the Data set
data.df <-read.csv(paste("E:/Studies/Edx Intro to Data Analysis/Udemy/Data sets/SixAirlines.csv", sep=""))#Loading the Data set
attach(data.df)#Attaching the Data ste
View(data.df)#General view of the entire Data frme
library(psych)
describe(data.df)
data.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/Data sets/SixAirlines.csv", sep=""))#Loading the Data set
describe(data.df)
library(ggplot2)
ggplot(data.df, aes(x = AIRLINE, fill = AIRLINE)) + geom_bar()
ggplot(data.df, aes(x = INTERNATIONAL))+ geom_bar()
View(data.df)
ggplot(data.df, aes(x = PRICE_ECONOMY)) + geom_density()
ggplot(data.df, aes(x = PRICE_PREMIUM)) + geom_density()
plot(FLIGHT_DURATION,PRICE_ECONOMY,
col="blue",
main="Price economy vs flight hours",
xlab="Hours", ylab="Price")
abline(h=mean(PRICE_ECONOMY), col="dark blue", lty="dotted")
abline(v=mean(FLIGHT_DURATION), col="dark blue", lty="dotted")
abline(lm(PRICE_ECONOMY ~ FLIGHT_DURATION))
plot(FLIGHT_DURATION,PRICE_PREMIUM,
col="blue",
main="Price economy vs flight hours",
xlab="Hours", ylab="Price")
library(corrplot)
library(gplots)      # for color interpolation
par(mfrow=c(1, 1))
corrplot.mixed(corr=cor(data.df[ , c(2:6, 8,10,12,15,17)], use="complete.obs"),
upper="ellipse", tl.pos="lt",
col = colorpanel(50, "red", "gray60", "blue4"))
install.packages("corrplot")
library(corrplot)
library(gplots)      # for color interpolation
par(mfrow=c(1, 1))
corrplot.mixed(corr=cor(data.df[ , c(2:6, 8,10,12,15,17)], use="complete.obs"),
upper="ellipse", tl.pos="lt",
col = colorpanel(50, "red", "gray60", "blue4"))
par(mfrow=c(1, 1))
corrplot.mixed(corr=cor(data.df[ , c(2:6, 7,9,11,15,17)], use="complete.obs"),
upper="ellipse", tl.pos="lt",
col = colorpanel(50, "red", "gray60", "blue4"))
library(car)
scatterplotMatrix(formula = ~ SEATS_ECONOMY + PITCH_ECONOMY + WIDTH_ECONOMY + PRICE_ECONOMY, cex=0.6,
data=data.df, diagonal="histogram")
scatterplotMatrix(formula = ~ SEATS_PREMIUM + PITCH_PREMIUM + WIDTH_PREMIUM + PRICE_PREMIUM, cex=0.6,
data=data.df, diagonal="histogram")
cor.test(PRICE_ECONOMY, PITCH_ECONOMY)
cor.test(PRICE_ECONOMY, WIDTH_ECONOMY)
cor.test(PRICE_PREMIUM, PITCH_PREMIUM)
cor.test(PRICE_PREMIUM, WIDTH_PREMIUM)
pre.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/prem.csv", sep=""))
install.packages("Boruta")
library(Boruta)
library(Boruta)
set.seed(1234) # for code reproducibility
response <- data.df$PRICE_PREMIUM
bor.results <- Boruta(pre.df,response,maxRuns=101,doTrace=0)
plot(bor.results)
response <- data.df$PRICE_PREMIUM
bor.results <- Boruta(pre.df,response,maxRuns=101,doTrace=0)
pre.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/prem.csv", sep=""))
pre.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/prem.csv", sep=""))
library(Boruta)
set.seed(1234) # for code reproducibility
response <- data.df$PRICE_PREMIUM
bor.results <- Boruta(pre.df,response,maxRuns=101,doTrace=0)
plot(bor.results)
ratio = sample(1:nrow(data.df), size = 0.25*nrow(data.df))
pre.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/Premium_data.csv", sep=""))
pre.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/Gopi Airlines Project/Premium_data.csv", sep=""))
library(Boruta)
set.seed(1234) # for code reproducibility
response <- data.df$PRICE_PREMIUM
bor.results <- Boruta(pre.df,response,maxRuns=101,doTrace=0)
plot(bor.results)
#Dividing the Data set into Test and Training Data ste
ratio = sample(1:nrow(data.df), size = 0.25*nrow(data.df))
Test = data.df[ratio,] #Test dataset 25% of total
Training = data.df[-ratio,] #Train dataset 75% of total
dim(Training)
dim(Test)
#Generating A Multi Variable Linear Regressional Model for Price of Economy Flights
linear.mod<- lm(PRICE_ECONOMY~ PITCH_ECONOMY + WIDTH_ECONOMY + FLIGHT_DURATION + QUALITY + PRICE_RELATIVE, data = Training)
summary(linear.mod)
#the t value of Pitch_economy and quality is positive indicating that these predictors are associated with
#Price_economy. A larger t-value indicates that that it is less likely that the coefficient is not equal to zero purely by chance.
#Again, as the p-value for Flight_Duration and Price_Relative is less than 0.05 they are both statistically significant in the multiple linear regression model for Price_Economy response variable.
#The model's, p-value: < 2.2e-16 is also lower than the statistical significance level of 0.05, this indicates that we can safely reject the null hypothesis that the value for the coefficient is zero
#(or in other words, the predictor variable has no explanatory relationship with the response variable).
#The model has a F Statistic of 90, which is considerably high
library(rpart)
install.packages("randomForest")
o
library(randomForest)
model.forest <- randomForest(PRICE_ECONOMY~ PITCH_ECONOMY + WIDTH_ECONOMY + FLIGHT_DURATION + QUALITY + PRICE_RELATIVE, data = Training, method = "anova",
ntree = 300,
mtry = 2, #mtry is sqrt(6)
replace = F,
nodesize = 1,
importance = T)
varImpPlot(model.forest)
#From the VIF plot we see that Flight Duration and Price Relative are most important factors in predicitng Price Economy.
#We test the model using Random Forest
prediction <- predict(model.forest,Test)
rmse <- sqrt(mean((log(prediction)-log(Test$PRICE_ECONOMY))^2))
round(rmse, digits = 3)
# Evaluation metric function
#A custom root mean Square Function to evaluate the performance of our model
RMSE <- function(x,y)
{
a <- sqrt(sum((log(x)-log(y))^2)/length(y))
return(a)
}
#Implementing the Regression Tree Model
model <- rpart(PRICE_ECONOMY~ PITCH_ECONOMY + WIDTH_ECONOMY + FLIGHT_DURATION + QUALITY + PRICE_RELATIVE, data = Training, method = "anova")
predict <- predict(model, Test)
RMSE1 <- RMSE(predict, Test$PRICE_ECONOMY)
RMSE1 <- round(RMSE1, digits = 3)
RMSE1
#For Premium Class Tickets
#Generating A Multi Variable Linear Regressional Model for Price of Premium Flights
linear.mod<- lm(PRICE_PREMIUM~ PITCH_PREMIUM + WIDTH_PREMIUM + FLIGHT_DURATION + QUALITY + PRICE_RELATIVE, data = Training)
summary(linear.mod)
#The model has an F Statistic of 48.4 which is mediumly high
#the t value of Pitch_premium, width_premium, Price_relative and quality is positive indicating that these predictors are associated with
#Price_Premium. A larger t-value indicates that that it is less likely that the coefficient is not equal to zero purely by chance.
#Again, as the p-value for Flight_Duration  is less than 0.05 they are both statistically significant in the multiple linear regression model for Price_Economy response variable.
#The model's, p-value: < 2.2e-16 is also lower than the statistical significance level of 0.05, this indicates that we can safely reject the null hypothesis that the value for the coefficient is zero
#(or in other words, the predictor variable has no explanatory relationship with the response variable).
library(rpart)
library(randomForest)
model.forest <- randomForest(PRICE_PREMIUM~ PITCH_PREMIUM + WIDTH_PREMIUM + FLIGHT_DURATION + QUALITY + PRICE_RELATIVE, data = Training, method = "anova",
ntree = 300,
mtry = 2, #mtry is sqrt(6)
replace = F,
nodesize = 1,
importance = T)
varImpPlot(model.forest)
#From the VIF plot we see that Flight Duration and Price Relative are most important factors in predicitng Price Economy.
# Evaluation metric function
#A custom root mean Square Function to evaluate the performance of our model
RMSE <- function(x,y)
{
a <- sqrt(sum((log(x)-log(y))^2)/length(y))
return(a)
}
#Implementing the Regression Tree Model
model <- rpart(PRICE_ECONOMY~ PITCH_ECONOMY + WIDTH_ECONOMY + FLIGHT_DURATION + QUALITY + PRICE_RELATIVE, data = Training, method = "anova")
predict <- predict(model, Test)
RMSE1 <- RMSE(predict, Test$PRICE_ECONOMY)
RMSE1 <- round(RMSE1, digits = 3)
RMSE1
eco.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/Gopi Airlines Project/Economy_data.csv", sep=""))
library(Boruta)
set.seed(1234) # for code reproducibility
response <- data.df$PRICE_ECONOMY
bor.results <- Boruta(eco.df,response,maxRuns=101,doTrace=0)
plot(bor.results)
#Using the Boruta package to calcuate the effectiveness of different variables in Calculating the price of Premium class tickets
pre.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/Gopi Airlines Project/Premium_data.csv", sep=""))
library(Boruta)
set.seed(1234) # for code reproducibility
response <- data.df$PRICE_PREMIUM
bor.results <- Boruta(pre.df,response,maxRuns=101,doTrace=0)
plot(bor.results)
#Dividing the Data set into Test and Training Data ste
ratio = sample(1:nrow(data.df), size = 0.25*nrow(data.df))
Test = data.df[ratio,] #Test dataset 25% of total
data.df <-read.csv(paste("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Airlines mini project/Gopi Airlines Project/SixAirlines.csv", sep=""))#Loading the Data set
cor.test(PRICE_ECONOMY, PITCH_ECONOMY)
View(hotel.df)
hotel.df<-read.csv(paste("Cities42.csv",sep = ""))
setwd("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Hotel Analysis/Sai Gopi Krishna Govindarajula Project")
hotel.df<-read.csv(paste("Cities42.csv",sep = ""))
#Viewing the data
View(hotel.df)
View(hotel.df)
hotel.df$Date<-gsub("18-Dec-16", "Dec 18 2016", hotel.df$Date)
hotel.df$Date<-gsub("21-Dec-16", "Dec 21 2016", hotel.df$Date)
hotel.df$Date<-gsub("24-Dec-16", "Dec 24 2016", hotel.df$Date)
hotel.df$Date<-gsub("25-Dec-16", "Dec 25 2016", hotel.df$Date)
hotel.df$Date<-gsub("28-Dec-16", "Dec 28 2016", hotel.df$Date)
hotel.df$Date<-gsub("31-Dec-16", "Dec 31 2016", hotel.df$Date)
hotel.df$Date<-gsub("4-Jan-17", "Jan 04 2017", hotel.df$Date)
hotel.df$Date<-gsub("4-Jan-16", "Jan 04 2017", hotel.df$Date)
hotel.df$Date<-gsub("8-Jan-16", "Jan 08 2017", hotel.df$Date)
hotel.df$Date<-gsub("8-Jan-17", "Jan 08 2017", hotel.df$Date)
hotel.df$Date<-gsub("Jan 4 2017", "Jan 04 2017", hotel.df$Date)
hotel.df$Date<-gsub("Jan 8 2017", "Jan 08 2017", hotel.df$Date)
#Checking the dates
table(hotel.df$Date)
#Changing dates to factors for labelling
hotel.df$Date<-factor(hotel.df$Date)
is.factor(hotel.df$Date)
#Checking the labelling
levels(hotel.df$Date)
#Analyzing the summary of the data and describing the variables
library(psych)
describe(hotel.df)
summary(hotel.df)
library(corrgram)
corrgram(hotel.df, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram of Hotel  data")
library(corrgram)
install.packages("scales")
library(corrgram)
corrgram(hotel.df, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram of Hotel  data")
table(hotel.df$HasSwimmingPool)
Swim<-table(hotel.df$HasSwimmingPool)
barplot(Swim,main="Barrplot of Hotel Swimming Pool")
table(hotel.df$StarRating)
starRating<-table(hotel.df$StarRating)
barplot(starRating,main = "Barrplot for Star Rating")
boxplot(hotel.df$HotelCapacity, main="Boxplot for Hotel Capacity",horizontal = TRUE)
library(car)
scatterplot(hotel.df$StarRating,hotel.df$RoomRent,main="RoomRent of Hotels  with StarRating",ylab = "RoomRent in INR", xlab="Star rating out of 5",cex=1.1)
scatterplot(hotel.df$HotelCapacity,hotel.df$RoomRent,main="RoomRent of Hotels  with Hotel capacity",ylab = "Hotel Capacity in rooms", xlab="RoomRent in INR",cex=1.1)
plot(jitter(hotel.df$RoomRent),jitter(hotel.df$HasSwimmingPool),main="RoomRent of Hotels  with HasSwimmingPool",ylab = "Has Swimmng Pool ", xlab="RoomRent",cex=1.1)
scatterplot(hotel.df$RoomRent,hotel.df$HotelCapacity,main="RoomRent of Hotels  with Hotel capacity",ylab = "Hotel Capacity in rooms", xlab="RoomRent in INR",cex=1.1)
scatterplot(hotel.df$HotelCapacity,hotel.df$RoomRent,main="RoomRent of Hotels  with Hotel capacity",ylab ="RoomRent in INR",xlab="Hotel Capacity in rooms",cex=1.1)
plot(jitter(hotel.df$RoomRent),jitter(hotel.df$HasSwimmingPool),main="RoomRent of Hotels  with HasSwimmingPool",ylab = "Has Swimmng Pool ", xlab="RoomRent",cex=1.1)
library(lattice)
bwplot(HasSwimmingPool~RoomRent, data = hotel.df,main="RoomRent of Hotels  with HasSwimmingPool",ylab = "Has Swimmng Pool ", xlab="RoomRent" )
scatterplotMatrix(
hotel.df[
,c("RoomRent","HasSwimmingPool","StarRating", "HotelCapacity")],
spread=FALSE, smoother.args=list(lty=2),
main="Scatter Plot Matrix", diagonal = "histogram")
library(corrgram)
xyz<-data.frame(hotel.df$RoomRent, hotel.df$HasSwimmingPool, hotel.df$HotelCapacity, hotel.df$StarRating)
corrgram(xyz, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram of Hotel Prices In India")
x<-hotel.df[,c("HasSwimmingPool","StarRating", "HotelCapacity")]
y<-hotel.df[,c("RoomRent")]
cor(x,y)
cov(x,y)
var(x,y)
RoomRent1.df <-hotel.df[which(hotel.df$RoomRent<100000),]
table(hotel.df$IsWeekend)
table1<-table(hotel.df$IsWeekend)
barplot(table1, main="Distribution of Weekend", xlab="Not weekend(0)         Weekend(1)", col="orange")
#Effect of Isweekend on RoomRent
iw= aggregate(RoomRent ~ IsWeekend, data=hotel.df,mean)
table1<-table(hotel.df$IsWeekend)
barplot(table1, main="Distribution of Weekend", xlab="Not weekend(0)         Weekend(1)", col="orange")
#Effect of Isweekend on RoomRent
iw= aggregate(RoomRent ~ IsWeekend, data=hotel.df,mean)
iw
barplot(table1, main="Distribution of Weekend", xlab="Not weekend(0)         Weekend(1)", col="orange")
#Effect of Isweekend on RoomRent
iw= aggregate(RoomRent ~ IsWeekend, data=hotel.df,mean)
iw
boxplot(RoomRent~IsWeekend,data=hotel.df, main="Room rent vs. IsWeekend", ylab="Not weekend(0)  weekend(1)", xlab="Room Rent in rupees ", col=c("red","blue"),horizontal=TRUE)
#Without extreme outliers
boxplot(RoomRent~IsWeekend,data=RoomRent1.df, main="Room rent vs. IsWeekend", ylab="Not weekend(0)  weekend(1)", xlab="Room Rent in rupees ", col=c("red","blue"),horizontal=TRUE)
#Comapring RoomRent on different dates
table(hotel.df$Date)
library(lattice)
histogram(~Date, data = hotel.df, main="Distribution of Dates", xlab = "Differnt of Dates", col="Blue")
#Effect of different dates on RoomRent
d = aggregate(RoomRent ~ Date, data = hotel.df,mean)
d
scatterplot(d$Date,d$RoomRent, main="Scatterplot between Date and RoomRent", xlab="Date", ylab = "Room Rent in Rupees")
boxplot(RoomRent~Date,data=hotel.df, main="Room rent vs. Date", xlab="Different Dates", ylab="Room Rent in rupees ", col=c("red","blue","green","yellow"))
##Without extreme outliers
boxplot(RoomRent~Date,data=RoomRent1.df, main="Room rent vs. Date", xlab="Different Dates", ylab="Room Rent in rupees ", col=c("red","blue","green","yellow"))
#Analyzing IsMetroCity effect on RoomRent
table(hotel.df$IsMetroCity)
table1<-table(hotel.df$IsMetroCity)
barplot(table1, main="Distribution of IsMetroCity", xlab="Not a Metro city(0)         Is a Metro City(1)", col="blue")
#Effect of IsMetroCity on RoomRent
imc = aggregate(RoomRent ~ IsMetroCity, data = hotel.df, mean)
imc
boxplot(RoomRent~IsMetroCity,data=hotel.df, main="Room rent vs. IsMetroCity", ylab="Metro city(1) or not(0)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
##Without extreme outliers
boxplot(RoomRent~IsMetroCity,data=RoomRent1.df, main="Room rent vs. IsMetroCity", ylab="Metro city(1) or not(0)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
#Analyzing IsTouristDestination effect on RoomRent
table(hotel.df$IsTouristDestination)
table1<-table(hotel.df$IsTouristDestination)
barplot(table1, main="Distribution of IsToursitDestination", xlab="Not a Tourist Destination(0)         Is a Tourist Destination(1)", col="yellow")
#Effect of IsTouristDestination on RoomRent
View(hotel.df)
View(hotel.df)
View(hotel.df)
setwd("E:/Studies/Sai Gopi Krishna Govindarajula/Udemy/project/Hotel Analysis/Sai Gopi Krishna Govindarajula Project")
#Reading the dataset and creating a data frame
hotelData.df<-read.csv(paste("Cities42.csv",sep = ""))
#Viewing the data
View(hotelData.df)
#Removing the repeated date by gsub command
hotelData.df$Date<-gsub("18-Dec-16", "Dec 18 2016", hotelData.df$Date)
hotelData.df$Date<-gsub("21-Dec-16", "Dec 21 2016", hotelData.df$Date)
hotelData.df$Date<-gsub("24-Dec-16", "Dec 24 2016", hotelData.df$Date)
hotelData.df$Date<-gsub("25-Dec-16", "Dec 25 2016", hotelData.df$Date)
hotelData.df$Date<-gsub("28-Dec-16", "Dec 28 2016", hotelData.df$Date)
hotelData.df$Date<-gsub("31-Dec-16", "Dec 31 2016", hotelData.df$Date)
hotelData.df$Date<-gsub("4-Jan-17", "Jan 04 2017", hotelData.df$Date)
hotelData.df$Date<-gsub("4-Jan-16", "Jan 04 2017", hotelData.df$Date)
hotelData.df$Date<-gsub("8-Jan-16", "Jan 08 2017", hotelData.df$Date)
hotelData.df$Date<-gsub("8-Jan-17", "Jan 08 2017", hotelData.df$Date)
hotelData.df$Date<-gsub("Jan 4 2017", "Jan 04 2017", hotelData.df$Date)
hotelData.df$Date<-gsub("Jan 8 2017", "Jan 08 2017", hotelData.df$Date)
#Checking the dates
table(hotelData.df$Date)
#Changing dates to factors for labelling
hotelData.df$Date<-factor(hotelData.df$Date)
is.factor(hotelData.df$Date)
hotelData.df$Date<-factor(hotelData.df$Date)
is.factor(hotelData.df$Date)
#Checking the labelling
levels(hotelData.df$Date)
#Analyzing the summary of the data and describing the variables
library(psych)
describe(hotelData.df)
summary(hotelData.df)
#Identifying the most relevent predictor variables by  correlation corrgram
#Taking Y = RoomRent
library(corrgram)
corrgram(hotelData.df, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram of hotelData")
##We can see that HasSwimming, StarRating, HotelCapacity are very well
#correlated to RoomRent. Hence considering them as predictor variables
##Visualizing data for Y as Room rent and X1,X2,X3 as HasSwimmingPool, StarRating and HotelCapacity respectively
#Table for HasSwimmingPool
table(hotelData.df$HasSwimmingPool)
Swim<-table(hotelData.df$HasSwimmingPool)
barplot(Swim,main="Barrplot of Hotel Swimming Pool")
#Table for StarRating
table(hotelData.df$StarRating)
starRating<-table(hotelData.df$StarRating)
barplot(starRating,main = "Barrplot for Star Rating")
#BoxPlot for HotelCapacity
boxplot(hotelData.df$HotelCapacity, main="Boxplot for Hotel Capacity",horizontal = TRUE)
#Scatterplot pair wise for predictor variable
library(car)
#StarRating Vs RoomRent
scatterplot(hotelData.df$StarRating,hotelData.df$RoomRent,main="RoomRent of Hotels  with StarRating",ylab = "RoomRent in INR", xlab="Star rating out of 5",cex=1.1)
#RoomRent Vs HotelCapacity
scatterplot(hotelData.df$HotelCapacity,hotelData.df$RoomRent,main="RoomRent of Hotels  with Hotel capacity",ylab ="RoomRent in INR",xlab="Hotel Capacity in rooms",cex=1.1)
#RoomRent Vs HasSwimmingPool
plot(jitter(hotelData.df$RoomRent),jitter(hotelData.df$HasSwimmingPool),main="RoomRent of Hotels  with HasSwimmingPool",ylab = "Has Swimmng Pool ", xlab="RoomRent",cex=1.1)
library(lattice)
bwplot(HasSwimmingPool~RoomRent, data = hotelData.df,main="RoomRent of Hotels  with HasSwimmingPool",ylab = "Has Swimmng Pool ", xlab="RoomRent" )
#Scatterplot matrix
scatterplotMatrix(
hotelData.df[
,c("RoomRent","HasSwimmingPool","StarRating", "HotelCapacity")],
spread=FALSE, smoother.args=list(lty=2),
main="Scatter Plot Matrix", diagonal = "histogram")
#Corrgram of Y, x1, x2, x3
library(corrgram)
xyz<-data.frame(hotelData.df$RoomRent, hotelData.df$HasSwimmingPool, hotelData.df$HotelCapacity, hotelData.df$StarRating)
corrgram(xyz, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram of Hotel Prices In India")
#Variance-Covariance Matrix for Y, x1, x2, x3
x<-hotelData.df[,c("HasSwimmingPool","StarRating", "HotelCapacity")]
y<-hotelData.df[,c("RoomRent")]
cor(x,y)
cov(x,y)
var(x,y)
#Forming a variable which is having RoomRent less than 1 lakh because the outliers effect the average
RoomRent1.df <-hotelData.df[which(hotelData.df$RoomRent<100000),]
#Comparing other factors and their pattern using other trends with roomrent
#Analyzing IsWeekeng effect on RoomRent
table(hotelData.df$IsWeekend)
table1<-table(hotelData.df$IsWeekend)
barplot(table1, main="Distribution of Weekend", xlab="Not weekend(0)         Weekend(1)", col="orange")
#Effect of Isweekend on RoomRent
iw= aggregate(RoomRent ~ IsWeekend, data=hotelData.df,mean)
iw
boxplot(RoomRent~IsWeekend,data=hotelData.df, main="Room rent vs. IsWeekend", ylab="Not weekend(0)  weekend(1)", xlab="Room Rent in rupees ", col=c("red","blue"),horizontal=TRUE)
#Without extreme outliers
boxplot(RoomRent~IsWeekend,data=RoomRent1.df, main="Room rent vs. IsWeekend", ylab="Not weekend(0)  weekend(1)", xlab="Room Rent in rupees ", col=c("red","blue"),horizontal=TRUE)
#Comapring RoomRent on different dates
table(hotelData.df$Date)
library(lattice)
histogram(~Date, data = hotelData.df, main="Distribution of Dates", xlab = "Differnt of Dates", col="Blue")
#Effect of different dates on RoomRent
d = aggregate(RoomRent ~ Date, data = hotelData.df,mean)
d
scatterplot(d$Date,d$RoomRent, main="Scatterplot between Date and RoomRent", xlab="Date", ylab = "Room Rent in Rupees")
boxplot(RoomRent~Date,data=hotelData.df, main="Room rent vs. Date", xlab="Different Dates", ylab="Room Rent in rupees ", col=c("red","blue","green","yellow"))
##Without extreme outliers
boxplot(RoomRent~Date,data=RoomRent1.df, main="Room rent vs. Date", xlab="Different Dates", ylab="Room Rent in rupees ", col=c("red","blue","green","yellow"))
#Analyzing IsMetroCity effect on RoomRent
table(hotelData.df$IsMetroCity)
table1<-table(hotelData.df$IsMetroCity)
barplot(table1, main="Distribution of IsMetroCity", xlab="Not a Metro city(0)         Is a Metro City(1)", col="blue")
#Effect of IsMetroCity on RoomRent
imc = aggregate(RoomRent ~ IsMetroCity, data = hotelData.df, mean)
imc
boxplot(RoomRent~IsMetroCity,data=hotelData.df, main="Room rent vs. IsMetroCity", ylab="Metro city(1) or not(0)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
##Without extreme outliers
boxplot(RoomRent~IsMetroCity,data=RoomRent1.df, main="Room rent vs. IsMetroCity", ylab="Metro city(1) or not(0)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
#Analyzing IsTouristDestination effect on RoomRent
table(hotelData.df$IsTouristDestination)
table1<-table(hotelData.df$IsTouristDestination)
barplot(table1, main="Distribution of IsToursitDestination", xlab="Not a Tourist Destination(0)         Is a Tourist Destination(1)", col="yellow")
#Effect of IsTouristDestination on RoomRent
itd = aggregate(RoomRent ~ IsTouristDestination, data = hotelData.df, mean)
itd
boxplot(RoomRent~IsTouristDestination,data=hotelData.df, main="Room rent vs. IsTouristDestination", ylab="IsTouristDestination(1) or not(0)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
##Without extreme outliers
boxplot(RoomRent~IsTouristDestination,data=RoomRent1.df, main="Room rent vs. IsTouristDestination", ylab="IsTouristDestination(1) or not(0)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
#Analyzing FreeWifi Vs RoomRent
table(hotelData.df$FreeWifi)
fw<-table(hotelData.df$FreeWifi)
barplot(fw, main="Borplot of FreeWifi",xlab= "FreeWifi" ,col="red")
#Effect of FreeWifi on RoomRent
fw = aggregate(RoomRent ~ FreeWifi, data = hotelData.df, mean)
fw
##With extreme outliers of roomrent
boxplot(RoomRent~FreeWifi,data=hotelData.df, main="Room rent vs. FreeWifi", ylab="Free Wifi available(1)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
##Without extreme outliers of roomrent
boxplot(RoomRent~FreeWifi,data=RoomRent1.df, main="Room rent vs. FreeWifi", ylab="Free Wifi available(1)", xlab="Room Rent in rupees ", col=c("red","blue","green","yellow"),horizontal=TRUE)
#Analyzing FreeBreakfast Vs RoomRent
table(hotelData.df$FreeWifi)
fw<-table(hotelData.df$FreeBreakfast)
barplot(fw, main="Borplot of FreeBreakfast",xlab= "FreeWifi" ,col="red")
#Effect of FreeBreakfast on RoomRent
fb = aggregate(RoomRent ~ FreeBreakfast, data =hotelData.df, mean)
fb1  = aggregate(RoomRent ~ FreeBreakfast, data =RoomRent1.df, mean)
##Aggregate are affected by outliers a lot in the case of FreeBreakfast on RoomRent
fb
fb1
##With extreme outliers of roomrent
boxplot(RoomRent~FreeBreakfast,data=hotelData.df, main="Room rent vs. FreeBreakfast", ylab="Free Breakfast available(1)", xlab="Room Rent in rupees ", col=c("green","yellow"),horizontal=TRUE)
##Without extreme outliers of roomrent
boxplot(RoomRent~FreeBreakfast,data=RoomRent1.df, main="Room rent vs. FreeBreakfast", ylab="Free Breakfast available(1)", xlab="Room Rent in rupees ", col=c("green","yellow"),horizontal=TRUE)
#Analyzing Airport distance from hotel effects in what way on RoomRent
summary(hotelData.df$Airport)
boxplot(hotelData.df$Airport, main="Boxplot of Airport",xlab= "Distance of airport from hotel(Km)" ,col="green",horizontal = TRUE)
#Effect of Airport distance on RoomRent
scatterplot(hotelData.df$Airport,hotelData.df$RoomRent, main="Room rent vs. Airport distance", xlab="Airport distance(km)", ylab="Room Rent in rupees ",cex=1.1)
##Hypothesis
#1.Average RoomRent in hotels having swimming pool is more than that which don't have.
t.test(RoomRent~HasSwimmingPool,data = hotelData.df, alternative="less")
#2.Average RoomRent in hotels with high star rating is high as compared to one which has less star rating.
t.test(hotelData.df$RoomRent,hotelData.df$StarRating)
#3.Average RoomRent in hotels providing Free Breakfast is more than that which don't provide.
t.test(RoomRent~FreeBreakfast, data = hotelData.df, alternative="less")
#4.Average RoomRent in metro cities hotels is more than that of non metro cities.
t.test(RoomRent~IsMetroCity, data = hotelData.df, alternative="less")
#5.Average RoomRent in hotels having more hotel capacity is more compared to one with less capacity.
t.test(hotelData.df$RoomRent,hotelData.df$HotelCapacity)
#Generating a multiple linear regression model for RoomRent
#1.
fit1<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity-1, data = hotelData.df)
summary(fit1)
#Coefficents of the model
fit1$coefficients
#Fitted residuals and values  are checked and the deviation was around 1000 , because of
#large data points it's not suitable to show those in the output file.
###.  Model1:    salary = b0 + b1*StarRating + b2*HasSwimmingPool+ b3*HotelCapacity
#   b0 = -1(assumption),  b1 =  1396.874562, b2=3719.6943, b3= -7.659814
#  Model:    salary = -1 + 1396.874562*StarRating + 3719.6943*HasSwimmingPool -7.659814*HotelCapacity
#2.
fit2<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+IsWeekend+IsTouristDestination-1, data = hotelData.df)
summary(fit2)
#Coefficents of the model
fit2$coefficients
#Fitted residuals and values  are checked and the deviation was around 1000 , because of
#large data points it's not suitable to show those in the output file.
###.  Model1:    salary = b0 + b1*StarRating + b2*HasSwimmingPool+ b3*HotelCapacity +b4*IsWeekend(0) + b5*IsWeekend(1) + b6*IsTouristDestination
#   b0 = -1(assumption),  b1 =  3635.819, b2=2285.132, b3= -13.965, b4=-8396.67457, b5=-8325.09152,b6=1878.94395
#  Model:    salary = -1 + 3635.819*StarRating + 2285.132*HasSwimmingPool -13.965*HotelCapacity
# -8396.67457*IsWeekend(0) - 8325.09152*IsWeekend(1) + 1878.94395*IsTouristDestination
#3.
fit3<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+Airport-1, data = hotelData.df)
summary(fit3)
#Coefficents of the model
fit3$coefficients
#Fitted residuals and values  are checked and the deviation was around 1000 , because of
#large data points it's not suitable to show those in the output file.
###.  Model1:    salary = b0 + b1*StarRating + b2*HasSwimmingPool+ b3*HotelCapacity +b4*Airport + b5*Date
#   b0 = -1(assumption),  b1 =  1248.426988 , b2=3903.736921, b3= -6.743354, b4= 18.869726
#  Model:    salary = -1 + 1248.426988*StarRating + 3903.736921*HasSwimmingPool -6.743354*HotelCapacity  + 18.869726*Aiport
fit1<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity-1, data = hotelData.df)
summary(fit1)
fit1<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity, data = hotelData.df)
summary(fit1)
fit2<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+IsWeekend+IsTouristDestination-1, data = hotelData.df)
summary(fit2)
fit3<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+Airport-1, data = hotelData.df)
summary(fit3)
fit3<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+Airport, data = hotelData.df)
summary(fit3)
fit3<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+Airport, data = hotelData.df)
summary(fit3)
#Coefficents of the model
fit3$coefficients
fit2<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+IsWeekend+IsTouristDestination-1, data = hotelData.df)
summary(fit2)
fit2<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+IsWeekend+IsTouristDestination-1, data = hotelData.df)
summary(fit2)
fit1<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity, data = hotelData.df)
summary(fit1)
fit2<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+IsWeekend+IsTouristDestination-1, data = hotelData.df)
summary(fit2)
fit3<-lm(RoomRent~StarRating+HasSwimmingPool+HotelCapacity+Airport, data = hotelData.df)
summary(fit3)
